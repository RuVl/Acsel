volumes:
  postgres_volume:
    driver: local

  redis_volume:
    driver: local

  product_volume:
    driver: local

services:
  nginx:
    image: nginx:1.26.0
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx:/etc/nginx/conf.d

  postgres:
    image: postgres:16.2
    restart: unless-stopped
    expose:
      - 5432
    env_file: ./postgres/.env
    volumes:
      - postgres_volume:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U $$POSTGRES_USER
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.2.4
    restart: unless-stopped
    expose:
      - 6379
    volumes:
      - redis_volume:/data
    env_file: ./redis/.env
    healthcheck:
      test: redis-cli ping
      interval: 10s
      timeout: 5s
      retries: 3

  telegram-bot:
    build:
      context: ./telegram_bot
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file:
      - ./telegram_bot/.env
      - ./postgres/.env
      - ./redis/.env
    environment:
      - PRODUCTS_FOLDER=/usr/src/files  # volume map
    volumes:
      - product_volume:/usr/src/files
      - ./postgres/database:/usr/src/app/database
      - ./telegram_bot/logging:/usr/src/app/logging
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  plisio:
    build:
      context: ./plisio
      dockerfile: Dockerfile
    restart: unless-stopped
    expose:
      - 8000
    env_file:
      - ./plisio/.env
      - ./postgres/.env
    volumes:
      - ./plisio:/usr/src/app
      - ./postgres/database:/usr/src/app/database
    depends_on:
      postgres:
        condition: service_healthy
